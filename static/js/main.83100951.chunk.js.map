{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","memo","user","className","href","TodoInfo","todo","cn","completed","title","TodoList","todos","map","findUserById","userId","usersFromServer","find","preparedTodos","App","useState","setTitle","selectedUserId","setSelectedUserId","setTodos","isErrorOnUserSelect","setErrorOnUserSelect","isErrorOnTitleInput","setErrorOnTitleInput","action","method","onSubmit","event","preventDefault","newUser","currentTodo","maxTodoId","Math","max","TextField","type","label","placeholder","value","onChange","target","select","MenuItem","disabled","Box","textAlign","Button","variant","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.83100951.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { memo } from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = memo(({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n});\n","import React, { memo } from 'react';\nimport cn from 'classnames';\nimport './TodoInfo.scss';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = memo(({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={cn(\n        'TodoInfo',\n        { 'TodoInfo--completed': todo.completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user && <UserInfo user={todo.user} />}\n    </article>\n  );\n});\n","import React, { memo } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = memo(({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n});\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport {\n  TextField,\n  Box,\n  Button,\n  MenuItem,\n} from '@material-ui/core';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport { TodoList } from './components/TodoList';\n\nfunction findUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nconst preparedTodos: Todo[] = todosFromServer.map(todo => {\n  return {\n    ...todo,\n    user: findUserById(todo.userId),\n  };\n});\n\nexport const App = () => {\n  const defaultChooseOption = 'Choose a user';\n  const [title, setTitle] = useState('');\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [todos, setTodos] = useState(preparedTodos);\n  const [isErrorOnUserSelect, setErrorOnUserSelect] = useState(false);\n  const [isErrorOnTitleInput, setErrorOnTitleInput] = useState(false);\n\n  const clear = () => {\n    setTitle('');\n    setSelectedUserId(0);\n  };\n\n  const handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (selectedUserId === 0 || title === '') {\n      if (title === '') {\n        setErrorOnTitleInput(true);\n      }\n\n      if (selectedUserId === 0) {\n        setErrorOnUserSelect(true);\n      }\n\n      return;\n    }\n\n    const newUser = findUserById(selectedUserId);\n\n    setTodos(currentTodo => {\n      const maxTodoId = Math.max(...currentTodo.map(todo => todo.id));\n\n      clear();\n\n      return [\n        ...currentTodo,\n        {\n          id: maxTodoId + 1,\n          title,\n          completed: false,\n          userId: newUser ? newUser.id : null,\n          user: newUser,\n        },\n      ];\n    });\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    if (isErrorOnTitleInput) {\n      setErrorOnTitleInput(false);\n    }\n  };\n\n  const handleUserChange\n    = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setSelectedUserId(+event.target.value);\n      if (isErrorOnUserSelect) {\n        setErrorOnUserSelect(false);\n      }\n    };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\">Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        className=\"form\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <TextField\n            data-cy=\"titleInput\"\n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            label=\"Title: \"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n\n          {isErrorOnTitleInput && (\n            <span className=\"error\">\n              Please enter a title\n            </span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <TextField\n            select\n            data-cy=\"userSelect\"\n            id=\"userSelect\"\n            name=\"userSelect\"\n            value={selectedUserId}\n            label=\"User: \"\n            onChange={handleUserChange}\n          >\n            <MenuItem value=\"0\" disabled>\n              {defaultChooseOption}\n            </MenuItem>\n\n            {usersFromServer.map(user => (\n              <MenuItem key={user.id} value={user.id}>\n                {user.name}\n              </MenuItem>\n            ))}\n          </TextField>\n\n          {isErrorOnUserSelect && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <Box textAlign=\"center\">\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            data-cy=\"submitButton\"\n          >\n            Add\n          </Button>\n        </Box>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}